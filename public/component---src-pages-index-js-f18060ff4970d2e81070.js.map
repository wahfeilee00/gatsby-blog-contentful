{"version":3,"file":"component---src-pages-index-js-f18060ff4970d2e81070.js","mappings":"kOA0BA,MArBiB,IAAkB,IAAjB,QAAEA,GAAS,EAC3B,MAAMC,GAAUC,EAAAA,EAAAA,GAAUF,GAE1B,OADAG,QAAQC,IAAIH,GAEV,uBAAKI,UAAU,iBACb,0BAAI,WACJ,uBAAKA,UAAU,aACZJ,EAAQK,KAAI,CAACC,EAAKC,KACjB,MAAOC,EAAMC,GAASH,EAChBI,EAAOC,IAAQH,EAAM,CAAEI,OAAO,IACpC,OACE,gBAAC,KAAI,CAACC,GAAE,SAAWH,EAAQI,IAAKP,GAC7BC,EAAK,KAAGC,EAAM,IACV,KAIT,E,SCcV,MAZmB,KACjB,MACMV,GADOgB,EAAAA,EAAAA,IApBJ,cAqBYC,oBAAoBC,MAEzC,OACE,2BAASb,UAAU,qBACjB,gBAAC,EAAQ,CAACL,QAASA,IACnB,gBAACmB,EAAA,EAAW,CAACnB,QAASA,IACd,C,2ECFd,IAzBoB,IAAuB,IAAtB,QAAEA,EAAU,IAAI,EACnC,OACE,uBAAKK,UAAU,gBACZL,EAAQM,KAAKc,IACZ,MAAM,GAAEC,EAAE,MAAEC,EAAK,MAAEC,EAAK,SAAEC,EAAQ,SAAEC,GAAaL,EAC3CM,GAAcC,EAAAA,EAAAA,GAASJ,GACvBZ,EAAOC,IAAQU,EAAO,CAAET,OAAO,IACrC,OACE,gBAAC,KAAI,CAACC,GAAE,IAAMH,EAAQI,IAAKM,EAAIhB,UAAU,UACvC,gBAAC,EAAAuB,EAAW,CACVL,MAAOG,EACPrB,UAAU,aACVwB,IAAKP,IAEP,0BAAKA,GACL,yBAAG,UACOE,EAAS,gBAAcC,EAAU,KAEtC,IAGP,C,0ECIV,UAvBa,IAET,gBAAC,IAAM,KACL,wBAAMpB,UAAU,QACd,0BAAQA,UAAU,QAChB,gBAAC,EAAAyB,EAAW,CACVC,IAAI,2BACJF,IAAI,OACJG,YAAY,YACZC,OAAO,YACPC,GAAG,MAAK,sBAEV,uBAAK7B,UAAU,kBACb,0BAAI,eAKV,gBAAC,IAAU,M,qBCkBjB,IApBmBL,IACjB,MAAMmC,EAAU,CAAC,EAEjBnC,EAAQoC,SAAShB,IACfA,EAAOiB,QAAQC,KAAKF,SAAS7B,IACvB4B,EAAQ5B,GACV4B,EAAQ5B,GAAO4B,EAAQ5B,GAAO,EAE9B4B,EAAQ5B,GAAO,CACjB,GACA,IAOJ,OALgBgC,OAAOC,QAAQL,GAASM,MAAK,CAACC,EAAGC,KAC/C,MAAOC,GAAYF,GACZG,GAAaF,EACpB,OAAOC,EAASE,cAAcD,EAAU,GAE5B,C","sources":["webpack://gatsby-starter-hello-world/./src/components/TagsList.js","webpack://gatsby-starter-hello-world/./src/components/AllRecipes.js","webpack://gatsby-starter-hello-world/./src/components/RecipesList.js","webpack://gatsby-starter-hello-world/./src/pages/index.js","webpack://gatsby-starter-hello-world/./utils/setupTags.js"],"sourcesContent":["import React from \"react\";\r\nimport setupTags from \"../../utils/setupTags\";\r\nimport { Link } from \"gatsby\";\r\nimport slugify from \"slugify\";\r\n\r\nconst TagsList = ({ recipes }) => {\r\n  const newTags = setupTags(recipes);\r\n  console.log(newTags);\r\n  return (\r\n    <div className=\"tag-container\">\r\n      <h4>Recipes</h4>\r\n      <div className=\"tags-list\">\r\n        {newTags.map((tag, index) => {\r\n          const [text, value] = tag;\r\n          const slug = slugify(text, { lower: true });\r\n          return (\r\n            <Link to={`/tags/${slug}`} key={index}>\r\n              {text} ({value})\r\n            </Link>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TagsList;\r\n","import React from \"react\";\r\nimport TagsList from \"./TagsList\";\r\nimport RecipesList from \"./RecipesList\";\r\nimport { graphql, useStaticQuery } from \"gatsby\";\r\n\r\nconst query = graphql`\r\n  {\r\n    allContentfulRecipe(sort: { title: ASC }) {\r\n      nodes {\r\n        id\r\n        title\r\n        cookTime\r\n        prepTime\r\n        image {\r\n          gatsbyImageData(layout: CONSTRAINED, placeholder: BLURRED)\r\n        }\r\n        content {\r\n          tags\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst AllRecipes = () => {\r\n  const data = useStaticQuery(query);\r\n  const recipes = data.allContentfulRecipe.nodes;\r\n\r\n  return (\r\n    <section className=\"recipes-container\">\r\n      <TagsList recipes={recipes} />\r\n      <RecipesList recipes={recipes} />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AllRecipes;\r\n","import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\r\nimport slugify from \"slugify\";\r\n\r\nconst RecipesList = ({ recipes = [] }) => {\r\n  return (\r\n    <div className=\"recipes-list\">\r\n      {recipes.map((recipe) => {\r\n        const { id, title, image, prepTime, cookTime } = recipe;\r\n        const pathToImage = getImage(image);\r\n        const slug = slugify(title, { lower: true });\r\n        return (\r\n          <Link to={`/${slug}`} key={id} className=\"recipe\">\r\n            <GatsbyImage\r\n              image={pathToImage}\r\n              className=\"recipe-img\"\r\n              alt={title}\r\n            />\r\n            <h5>{title}</h5>\r\n            <p>\r\n              Prep : {prepTime}min | Cook : {cookTime}{\" \"}\r\n            </p>\r\n          </Link>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecipesList;\r\n","import * as React from \"react\";\r\nimport { Layout } from \"../components/Layout\";\r\n// import Images from \"../examples/Images\";\r\nimport { StaticImage } from \"gatsby-plugin-image\";\r\n// import FetchData from \"../examples/fetchData\";\r\nimport AllRecipes from \"../components/AllRecipes\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <Layout>\r\n      <main className=\"page\">\r\n        <header className=\"hero\">\r\n          <StaticImage\r\n            src=\"../assets/images/big.jpg\"\r\n            alt=\"food\"\r\n            placeholder=\"tracedSVG\"\r\n            layout=\"fullWidth\"\r\n            as=\"div\"\r\n          />\r\n          <div className=\"hero-container\">\r\n            <h1>No Fluff</h1>\r\n          </div>\r\n        </header>\r\n        {/* <FetchData /> */}\r\n      </main>\r\n      <AllRecipes />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","// const setupTags = (recipes) => {\r\n//   const allTags = {};\r\n\r\n//   recipes.forEach((recipe) => {\r\n//     recipe.content.tags.forEach((tag) => {\r\n//       if (allTags[tag]) {\r\n//         allTags[tag] = allTags[tag] + 1;\r\n//       } else {\r\n//         allTags[tag] = 1;\r\n//       }\r\n//     });\r\n//   });\r\n//   const newTags = Object.entries(allTags).sort((a, b) => {\r\n//     const [firstTag] = a;\r\n//     const [secondTag] = b;\r\n//     return firstTag.localeCompare(secondTag);\r\n//   });\r\n\r\n//   return recipes;\r\n// };\r\n\r\n// export default setupTags;\r\n\r\nconst setupTags = (recipes) => {\r\n  const allTags = {};\r\n\r\n  recipes.forEach((recipe) => {\r\n    recipe.content.tags.forEach((tag) => {\r\n      if (allTags[tag]) {\r\n        allTags[tag] = allTags[tag] + 1;\r\n      } else {\r\n        allTags[tag] = 1;\r\n      }\r\n    });\r\n  });\r\n  const newTags = Object.entries(allTags).sort((a, b) => {\r\n    const [firstTag] = a;\r\n    const [secondtag] = b;\r\n    return firstTag.localeCompare(secondtag);\r\n  });\r\n  return newTags;\r\n};\r\n\r\nexport default setupTags;\r\n"],"names":["recipes","newTags","setupTags","console","log","className","map","tag","index","text","value","slug","slugify","lower","to","key","useStaticQuery","allContentfulRecipe","nodes","RecipesList","recipe","id","title","image","prepTime","cookTime","pathToImage","getImage","G","alt","S","src","placeholder","layout","as","allTags","forEach","content","tags","Object","entries","sort","a","b","firstTag","secondtag","localeCompare"],"sourceRoot":""}